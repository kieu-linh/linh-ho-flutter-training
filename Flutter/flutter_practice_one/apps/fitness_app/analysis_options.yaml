include: package:very_good_analysis/analysis_options.yaml

analyzer:
  exclude:
    - "build/**"
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "lib/app_env.dart"
    - "lib/core/resources/l10n_generated/**"
    - "lib/core/resources/assets_generated/**"
    - "pubspec.yaml"

  # plugins:
  #   # Use dart_code_metrics for improve reports
  #   - dart_code_metrics

  errors:
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: warning
    # treat missing returns as a warning (not a hint)
    missing_return: warning
    # allow having TODOs in the code
    todo: ignore
    public_member_api_docs: ignore
    one_member_abstracts: ignore
    strict_raw_type: ignore
    unused_result: ignore
    depend_on_referenced_packages: ignore

    import_of_legacy_library_into_null_safe: ignore
    invalid_use_of_visible_for_testing_member: ignore

linter:
  rules:
    # STYLE
    - camel_case_types
    - camel_case_extensions
    - library_names
    - file_names
    - library_prefixes
    - non_constant_identifier_names
    - constant_identifier_names # prefer
    - directives_ordering
    - lines_longer_than_80_chars # avoid
    - curly_braces_in_flow_control_structures

    # DOCUMENTATION
    - slash_for_doc_comments
    - package_api_docs # prefer
    - public_member_api_docs: false # prefer
    #- comment_references # Unused because https://github.com/dart-lang/sdk/issues/36974

    # USAGE
    - implementation_imports
    # - avoid_relative_lib_imports
    # - prefer_relative_imports
    - always_use_package_imports
    - prefer_adjacent_string_concatenation
    - prefer_interpolation_to_compose_strings # prefer
    - unnecessary_brace_in_string_interps # avoid
    - prefer_collection_literals
    - prefer_is_empty
    - prefer_is_not_empty
    - avoid_function_literals_in_foreach_calls # avoid
    - prefer_iterable_whereType
    - prefer_function_declarations_over_variables
    - unnecessary_lambdas
    - prefer_equal_for_default_values
    - avoid_init_to_null
    - unnecessary_getters_setters
    #- unnecessary_getters # prefer # Disabled pending fix: https://github.com/dart-lang/linter/issues/23
    #- prefer_expression_function_bodies # consider
    - unnecessary_this
    - prefer_initializing_formals
    - type_init_formals
    - empty_constructor_bodies
    - unnecessary_new
    - unnecessary_const
    - avoid_catches_without_on_clauses # avoid
    - avoid_catching_errors
    - use_rethrow_when_possible

    # DESIGN
    - use_to_and_as_if_applicable # prefer
    # - avoid_classes_with_only_static_members # avoid
    - prefer_mixin
    - prefer_final_fields # prefer
    - use_setters_to_change_properties
    - avoid_setters_without_getters
    - avoid_returning_null # avoid
    - avoid_returning_this # avoid
    - type_annotate_public_apis # prefer
    #- prefer_typing_uninitialized_variables # consider
    # - omit_local_variable_types # avoid
    # - avoid_types_on_closure_parameters # avoid
    - avoid_return_types_on_setters
    - prefer_generic_function_type_aliases
    - avoid_private_typedef_functions # prefer
    #- use_function_type_syntax_for_parameters # consider
    - avoid_positional_boolean_parameters # avoid
    - hash_and_equals
    - avoid_equals_and_hash_code_on_mutable_classes # avoid
    - avoid_null_checks_in_equality_operators

    # FLUTTER
    - avoid_print
    - avoid_unnecessary_containers
    - avoid_web_libraries_in_flutter
    - no_logic_in_create_state
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - sized_box_for_whitespace
    - use_full_hex_values_for_flutter_colors
    - use_key_in_widget_constructors

    # RECOMMENDED
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_renaming_method_parameters
    - avoid_returning_null_for_void
    - avoid_single_cascade_in_expression_statements
    - control_flow_in_finally
    - empty_statements
    - exhaustive_cases
    - null_closures
    - avoid_redundant_argument_values

    # OVERRIDDEN-FIELD
    - package_names
    - prefer_is_not_operator
    - prefer_null_aware_operators
    - prefer_spread_collections
    - prefer_void_to_null
    - recursive_getters
    - unnecessary_null_in_if_null_operators
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - use_function_type_syntax_for_parameters

    # CORE
    - avoid_types_as_parameter_names
    - unnecessary_overrides
    - valid_regexps
    - void_checks

    # NEW RULE UPDATE AT VERY_GOOD_ANALYSIS: 5.1.0
    - always_declare_return_types
    - always_put_required_named_parameters_first
    - avoid_bool_literals_in_conditional_expressions
    - avoid_double_and_int_checks
    - avoid_dynamic_calls
    - avoid_empty_elses
    - avoid_escaping_inner_quotes
    - avoid_field_initializers_in_const_classes
    - avoid_final_parameters
    - avoid_js_rounded_ints
    - avoid_multiple_declarations_per_line
    - avoid_shadowing_type_parameters
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_void_async
    - await_only_futures
    - cancel_subscriptions
    - cascade_invocations
    - cast_nullable_to_non_nullable
    - collection_methods_unrelated_type
    - combinators_ordering
    - conditional_uri_does_not_exist
    - constant_identifier_names
    - dangling_library_doc_comments
    - depend_on_referenced_packages
    - deprecated_consistency
    - empty_catches
    - eol_at_end_of_file
    - flutter_style_todos
    - implicit_call_tearoffs
    - implicit_reopen
    - invalid_case_patterns
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - library_annotations
    - library_private_types_in_public_api
    - literal_only_boolean_expressions
    - missing_whitespace_between_adjacent_strings
    - no_adjacent_strings_in_list
    - no_default_cases
    - no_duplicate_case_values
    - no_leading_underscores_for_library_prefixes
    - no_leading_underscores_for_local_identifiers
    - no_runtimeType_toString
    - noop_primitive_operations
    - null_check_on_nullable_type_parameter
    - one_member_abstracts
    - only_throw_errors
    - overridden_fields
    - package_prefixed_library_names
    - parameter_assignments
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_conditional_assignment
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_inlined_adds
    - prefer_int_literals
    - prefer_null_aware_method_calls
    - prefer_single_quotes
    - provide_deprecation_message
    - require_trailing_commas
    - secure_pubspec_urls
    - sized_box_shrink_expand
    - sort_child_properties_last
    - sort_constructors_first
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - tighten_type_of_initializing_formals
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_breaks
    - unnecessary_constructor_name
    - unnecessary_late
    - unnecessary_library_directive
    - unnecessary_null_aware_assignments
    - unnecessary_null_checks
    - unnecessary_nullable_for_final_variable_declarations
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_statements
    - unnecessary_to_list_in_spreads
    - unrelated_type_equality_checks
    - use_build_context_synchronously
    - use_colored_box
    - use_enums
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - use_late_for_private_fields_and_variables
    - use_named_constants
    - use_raw_strings
    - use_string_buffers
    - use_string_in_part_of_directives
    - use_super_parameters
    - use_test_throws_matchers
# dart_code_metrics:
#   anti-patterns:
#     - long-method: false # Ignore for now
#     - long-parameter-list: false # Ignore for now
#   metrics:
#     cyclomatic-complexity: 20
#     maximum-nesting-level: 5
#     number-of-parameters: 4
#     source-lines-of-code: 50
#   metrics-exclude:
#     - test/**
#     - lib/core/resources/** # Ignore analyze code generated by `flutter_gen` plugin
#   rules:
#     - newline-before-return
#     - no-boolean-literal-compare
#     # - no-empty-block
#     - prefer-trailing-comma
#     - prefer-conditional-expressions
#     - no-equal-then-else